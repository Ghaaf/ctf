from fractions import gcd
def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m


i12=49244030705228180104328368856085797830105072817914068247956604979530434783332078300812225545342159380105880851332436177604771884632376488349692505311358912120289938769757278591459508006976279990306315695146041746752559671324344795850052690634165055409308578040016280468493701548921690185949930518184252656921
i13=7139903812978714933813761760254416297047188569434866595352812926947312306140839243343343608299229879387557690115859259825294572840247231563149811204881186186708356964376153445296529170868932915426635997595862924672936487753739357978724601756944109456827008474109624331061479682938161299388186160617143541058
i14=57895045912229721461876856581857874222040285358422703464759541541223346223224454819421701652613674774634980294165709939632844376333490503024391710978814931491376254405716168995508689599834484213116912574927241214883026026153716621782942996638971872441745311127077633955727447902054918922488499057248785809421
i15=74841545156765335455152955067460568736277082988453514833812007010011393701078171296891570708230859649460076104454032987497084461880652393056928826485300103173427351113154870009061197441282511690323897760177923430724548447789996237645725024714072979255874483112850340081717879462372511072848966103553625058171
i16=58960867406397467805163204361229624571507378665905445577991538540272468389026309669168543702927762564059561868400316674796316900942298046597474158595442402420572203461058895534314432457408576906487249657325743871864542477076949708815367342932099451994969251220533238969912217193298025415140736309089321828219
i23=86032034145111073558645798334176450966681408874738826576986942790142040619152781014886754640829150311110611555779373557460755280445834708784554360220071642551395776770268520372704894128315224879887616504478361286015039512308544400022989036572088356202796911409956821113730786206112468630074110322275699876626
i24=25515609038692316889006380945923530923023687169341777234600908499151191891389335796347862366880485196109481693422470804858679070032193718931367358152905953230245357114207504383885455509680306962480259460665035671599385252047676944685627301657904147794927066976481070088992623336184816286895921388699918946858
i25=5534877009045670690099180191452669949888616209676094855203358263755309910213385674586211368001082484561694852160155732094323173811701790491572059186383675072082513356879042536890665524655102007701444366107461562237554982135091212188734577304570003629897082948787885330032966569807539617906935849714211192100
i26=25644443852987939590276850651630983329351778487571871627253565904595518136551266708062686797696257697858601877630055550889130440863097033437844491758505342771039181331126633112784205030769383580874051746606664862209225858521865835622568605994744041941341473843480377675927352413499489618850222933675362342284
i27=14283352921274027150207808578049886926087863128541086124774535501235614266446882938083537547563156470807049894701190448425606483204098491287232834308777312510343402567665612272955807018966859590767767735430925538438211342340160829768781517771218691802484212318011466094219352270566282972981533061474412060547
i34=66342884308702857378588996537492063854217747645145707136158365229718784201687666888851531440948102094050871354281250199051619191417381982677741845572997946131637674939106795454937454594019013552928314626851631427494350520634898214025782887375014485980045023934361110077550243766696785110511318890290534680528
i35=71420479038463106336131987738421479285793275411242024156170382345145193252353698154393750680643739335529113203090700662061646808071139167204853757057786249992360632058813420499264464903512580686917186028920996970915376301321296836487319459232628793354579634103528663708715260998572417963734920220198556458444


a=gcd(abs(i12-i13),abs(i14-i15))
b=gcd(abs(i12-i23),abs(i24-i25))
e = 65537
d=modinv(e,(a-1)*(b-1))
flag=pow(i12,d,a*b)
str=""
while flag>0:
	str=chr(flag%256)+str
	flag/=256
print str